AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  BucketNameParameter:
    Type: String
    Description: "Specify the bucket name"
  Environment:
    Type: String
    Description: "Select an environment"
    AllowedValues:
      - Dev
      - Test
      - Prod
  # ACL:
  #   Type: String
  #   Description: Would you like to apply a canned access control list to grant predefined permissions?
  #   AllowedValues:
  #     # private - (Bucket & Object): Owner gets FULL_CONTROL. No one else has access rights. *default*
  #     - "Private"
  #       # public-read - (Bucket & Object): Owner gets FULL_CONTROL.  The AllUsers group gets READ access.
  #     - "PublicRead"
  #       # public-read-write - (Bucket & Object): Owner gets FULL_CONTROL. The AllUsers group gets READ and WRITE access. *Not generally recommended*
  #     - "PublicReadWrite"
  #       # aws-exec-read - (Bucket & Object): Owner gets FULL_CONTROL. Amazon EC2 gets READ access to GET an AMI bundle from Amazon S3.
  #     - "AwsExecRead"
  #       # authenitcated-read - (Bucket & Object): Owner gets FULL_CONTROL. The AuthenticatedUsers group gets READ access.
  #     - "AuthenticatedRead"
  #       # bucket-owner-read - (Object): Object owner gets FULL_CONTROL. Bucket owner gets READ access. *If specified at time of bucket creation, Amazon S3 ignores it*
  #     - "BucketOwnerRead"
  #       # bucket-owner-full-control - (Object): Both object owner and bucket owner get FULL_CONTROL over objects. *If specified at time of bucket creation, Amazon S3 ignores it*
  #     - "BucketOwnerFullControl"
  #       # log-delivery-write - (Bucket): The LogDelivery group gets WRITE and READ_ACP permissions on the bucket. *See S3 Server Access Logging for more information: https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html *
  #     - "LogDeliveryWrite"
  #       # none - (N/A): No canned ACL defined
  #     - "None"
  #   Default: "Private"

Mappings:
  EnvironmentToBucketSuffix:
    Dev:
      Suffix: "app-appname-dev"
    Test:
      Suffix: "app-appname-test"
    Prod:
      Suffix: "app-appname-prod"

Resources:
  s3bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Join [
          "-",
          [
            !Ref BucketNameParameter,
            !FindInMap [EnvironmentToBucketSuffix, !Ref Environment, Suffix],
          ],
        ]
      Tags:
        - Key: Primay owner
          Value: SurajSingh

      # AccessControl: !Ref ACL
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

Outputs:
  BucketURL:
    Value: !Join ["", ["https://", !GetAtt s3bucket.DomainName]]
    Export:
      Name: !Join ["", [!Ref "AWS::StackName", "BucketURL"]]

  BucketARN:
    Value: !GetAtt s3bucket.Arn
    Export:
      Name: !Join ["", [!Ref "AWS::StackName", "BucketARN"]]
